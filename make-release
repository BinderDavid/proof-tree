#!/bin/bash

#set -x
set -e

commit_changes="yes"
commit_changes="no"

timestamp=$(date '+%Y-%m-%d')

dir="prooftree-$timestamp"

webdir=/home/tews/www/alfa-www/askra-root/software/prooftree

version=$(cat version.txt)

if [ $commit_changes = "yes" ] ; then

    sed -i.$(date +%s)~ \
	-e "s/^<DT>XXXX-XX-XX/<DT>$timestamp: Prooftree $version released/" \
	changes.html

    cvsmessage="* prepare changes.html for release"

    cat - ChangeLog > newchangelog <<EOF
$(date +%Y-%m-%d)  Hendrik Tews <prooftree@askra.de>

	$cvsmessage

EOF

    mv newchangelog ChangeLog

    cvs update | grep -v '^?' | grep -v '^cvs update: Updating'

    echo
    echo Commit and copy patched [recent-]changes.html : 
    echo cvs commit -m "$cvsmessage" . ?
    echo -n [Y/n]?
    read answer

    if [  ${answer:=y} = n -o $answer = N ] ; then
	exit 0
    fi

    cvs commit -m "$cvsmessage" .
    cp changes.html $webdir

    sed -n -e '/RECENT CHANGES START/,/RECENT CHANGES END/p' \
	< changes.html > $webdir/recent-changes.html
fi

#######################################################################
# make source and bin package

subdir="prooftree-$version"

echo start make-dep-package

./make-deb-package

pushd /tmp/tews/$dir

pushd $subdir

make prooftree.man.html

popd
# back in $dir

tgzfile=$(ls prooftree-*.tar.gz)

echo
echo copy prooftree.man.html $tgzfile
echo to $webdir
echo -n [Y/n]?
read answer

if [  ${answer:=y} = n -o $answer = N ] ; then
    exit 0
fi

cp $subdir/prooftree.man.html $webdir
cp $tgzfile $webdir/releases

popd
# back to startdir

echo
echo Fix source download links in website ?
echo -n [Y/n]?
read answer

if [  ${answer:=y} = n -o $answer = N ] ; then
    exit 0
fi

oldlink=$(sed -n -e '/LATEST VERSION LINK/ {s/<![^>]*>//
       	  	   	   	            s/\[prooftree-//
				            s/.tar.gz\]//
                                            s/>$/>,/
                                            p
				           }' < $webdir/index.shtml)


newlink="<!-- LATEST VERSION LINK --><A HREF=\"releases/$tgzfile\">[$tgzfile]<\\/A>"

cp $webdir/index.shtml $webdir/index.shtml.$(date +%s)~

sed -e "/LATEST VERSION LINK/ c$newlink" \
    -e "/^<P>Previous versions:/ {p
                             c$oldlink
                            }" \
    -e "/UPDATE VERSION/ s/prooftree_[^_]*_/prooftree_$version-1_/" \
    < $webdir/index.shtml > $webdir/indexnew.shtml


#diff -u $webdir/index.shtml $webdir/indexnew.shtml
#exit 0

mv $webdir/indexnew.shtml $webdir/index.shtml


echo
echo Upload website?
echo -n [Y/n]?
read answer

if [  ${answer:=y} = n -o $answer = N ] ; then
    exit 0
fi

/home/tews/www/update-sys -web

release_tag=prooftree-release-$(echo $version | tr '.' '-')

echo
echo cvs tag $release_tag ?
echo -n [Y/n]?
read answer

if [ ${answer:=y} = n -o $answer = N ] ; then
    exit 0
fi

cvs tag $release_tag

echo
echo bump version number?
echo -n [Y/n]?
read answer

if [  ${answer:=y} = n -o $answer = N ] ; then
    exit 0
fi

pt_old_version=$(sed -e 's/0\.//' < version.txt)
pt_version=$(($pt_old_version + 1))


cp version.txt version.txt.$(date +%s)~
echo 0.$pt_version > version.txt

releasetime=$(TZ=UTC date '+%Y-%m-%d %H:%M:%S %Z')
cvsmessage="* release version 0.$pt_old_version on $releasetime"

cat - ChangeLog > newchangelog <<EOF
$(date +%Y-%m-%d)  Hendrik Tews <prooftree@askra.de>

	$cvsmessage

EOF

mv newchangelog ChangeLog

cvs update | grep -v '^?' | grep -v '^cvs update: Updating'


echo
echo cvs commit -m "$cvsmessage" . ??
echo -n [Y/n]?
read answer

if [  ${answer:=y} = n -o $answer = N ] ; then
    exit 0
fi

cvs commit -m "$cvsmessage" .

